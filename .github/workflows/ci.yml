name: Github CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Asym-Test-Cov-Demo:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libgmp-dev libmpfr-dev libssl-dev cmake lcov

      - name: Checkout RELIC
        uses: actions/checkout@v4
        with:
          repository: relic-toolkit/relic
          path: relic

      - name: Install RELIC asymmetric curve
        run: |
          mkdir relic/build && cd relic/build
          ../preset/gmp-pbc-bls381.sh ..
          cmake --build . --parallel
          sudo cmake --install .

      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Configure RBP with coverage flags and build
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DENABLE_CODE_COVERAGE=ON
          cmake --build build --parallel

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      - name: Capture coverage
        run: |
          lcov --ignore-errors mismatch,gcov,unused \
               --directory build \
               --capture --output-file coverage.info
          lcov --extract coverage.info '*/src/**' --output-file coverage.info

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.info
          flags: unittests
          fail_ci_if_error: true

      - name: Reconfigure RBP without coverage, build, and install
        run: |
          rm -rf build && cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --parallel
          sudo cmake --install build

      - name: Build demo
        run: |
          cmake -B demo_build -S demo -DCMAKE_BUILD_TYPE=Release
          cmake --build demo_build --parallel

      - name: Run demo
        run: ./demo_build/demo

  Sym-Test:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libgmp-dev libmpfr-dev libssl-dev cmake

      - name: Checkout RELIC
        uses: actions/checkout@v4
        with:
          repository: relic-toolkit/relic
          path: relic

      - name: Install RELIC symmetric curve
        run: |
          mkdir relic/build && cd relic/build
          ../preset/gmp-pbc-ss1536.sh ..
          cmake --build . --parallel
          sudo cmake --install .

      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build project and run tests
        run: |
          cmake --build build --parallel
          ctest
